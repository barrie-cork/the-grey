# Generated by Django 4.2.11 on 2025-07-26 23:58

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("serp_execution", "0001_initial"),
        ("review_manager", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DuplicateGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "canonical_url",
                    models.URLField(
                        help_text="The primary URL for this group", max_length=2048
                    ),
                ),
                (
                    "similarity_type",
                    models.CharField(
                        choices=[
                            ("exact_url", "Exact URL Match"),
                            ("normalized_url", "Normalized URL Match"),
                            ("title_match", "Title Match"),
                            ("content_hash", "Content Hash Match"),
                            ("fuzzy_match", "Fuzzy Match"),
                        ],
                        help_text="How duplicates were identified",
                        max_length=50,
                    ),
                ),
                (
                    "result_count",
                    models.IntegerField(
                        default=0, help_text="Number of results in this group"
                    ),
                ),
                (
                    "sources",
                    models.JSONField(
                        default=list, help_text="List of search engines that found this"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        help_text="The search session these duplicates belong to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="duplicate_groups",
                        to="review_manager.searchsession",
                    ),
                ),
            ],
            options={
                "db_table": "duplicate_groups",
                "ordering": ["-result_count"],
            },
        ),
        migrations.CreateModel(
            name="ProcessingSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("partial", "Partial"),
                        ],
                        default="pending",
                        help_text="Current processing status",
                        max_length=20,
                    ),
                ),
                (
                    "current_stage",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("initialization", "Initialization"),
                            ("url_normalization", "URL Normalization"),
                            ("deduplication", "Deduplication"),
                            ("finalization", "Finalization"),
                        ],
                        help_text="Current processing stage",
                        max_length=30,
                    ),
                ),
                (
                    "stage_progress",
                    models.IntegerField(
                        default=0, help_text="Progress within current stage (0-100)"
                    ),
                ),
                (
                    "total_raw_results",
                    models.IntegerField(
                        default=0, help_text="Total number of raw results to process"
                    ),
                ),
                (
                    "processed_count",
                    models.IntegerField(
                        default=0, help_text="Number of results processed so far"
                    ),
                ),
                (
                    "error_count",
                    models.IntegerField(
                        default=0, help_text="Number of processing errors encountered"
                    ),
                ),
                (
                    "duplicate_count",
                    models.IntegerField(
                        default=0, help_text="Number of duplicates found"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, help_text="When processing started", null=True
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, help_text="When processing completed", null=True
                    ),
                ),
                (
                    "last_heartbeat",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last progress update timestamp",
                        null=True,
                    ),
                ),
                (
                    "error_details",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of processing errors with details",
                    ),
                ),
                (
                    "retry_count",
                    models.IntegerField(
                        default=0, help_text="Number of retry attempts"
                    ),
                ),
                (
                    "processing_config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Processing configuration parameters",
                    ),
                ),
                (
                    "celery_task_id",
                    models.CharField(
                        blank=True,
                        help_text="Associated Celery task ID",
                        max_length=255,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "search_session",
                    models.OneToOneField(
                        help_text="The search session being processed",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processing_session",
                        to="review_manager.searchsession",
                    ),
                ),
            ],
            options={
                "db_table": "processing_sessions",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["search_session", "status"],
                        name="processing__search__6eb359_idx",
                    ),
                    models.Index(
                        fields=["status", "started_at"],
                        name="processing__status_ddc09f_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ProcessedResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.TextField(help_text="Cleaned and normalized title")),
                ("url", models.URLField(help_text="Canonical URL", max_length=2048)),
                (
                    "snippet",
                    models.TextField(
                        blank=True, help_text="Cleaned snippet or abstract"
                    ),
                ),
                (
                    "authors",
                    models.JSONField(
                        blank=True, default=list, help_text="List of author names"
                    ),
                ),
                (
                    "publication_date",
                    models.DateField(
                        blank=True, help_text="Extracted publication date", null=True
                    ),
                ),
                (
                    "publication_year",
                    models.IntegerField(
                        blank=True,
                        help_text="Publication year for easier filtering",
                        null=True,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        blank=True,
                        help_text="Type of document (report, thesis, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="en", help_text="Document language code", max_length=10
                    ),
                ),
                (
                    "source_organization",
                    models.CharField(
                        blank=True, help_text="Publishing organization", max_length=255
                    ),
                ),
                (
                    "full_text_url",
                    models.URLField(
                        blank=True,
                        help_text="Direct link to full text (PDF, etc.)",
                        max_length=2048,
                    ),
                ),
                (
                    "is_pdf",
                    models.BooleanField(
                        default=False, help_text="Whether the result is a PDF"
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this result was processed"
                    ),
                ),
                (
                    "is_reviewed",
                    models.BooleanField(
                        default=False, help_text="Whether this result has been reviewed"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "duplicate_group",
                    models.ForeignKey(
                        blank=True,
                        help_text="Group of duplicate results",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="results",
                        to="results_manager.duplicategroup",
                    ),
                ),
                (
                    "raw_result",
                    models.ForeignKey(
                        blank=True,
                        help_text="The original raw result this was processed from",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="processed_version",
                        to="serp_execution.rawsearchresult",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        help_text="The search session this result belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processed_results",
                        to="review_manager.searchsession",
                    ),
                ),
            ],
            options={
                "db_table": "processed_results",
                "ordering": ["-processed_at"],
                "indexes": [
                    models.Index(
                        fields=["session", "is_reviewed"],
                        name="processed_r_session_ad5900_idx",
                    ),
                    models.Index(fields=["url"], name="processed_r_url_d3d2e0_idx"),
                    models.Index(
                        fields=["publication_year"],
                        name="processed_r_publica_51096c_idx",
                    ),
                    models.Index(
                        fields=["document_type"], name="processed_r_documen_295624_idx"
                    ),
                    models.Index(
                        fields=["-processed_at"], name="processed_r_process_6878ff_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="duplicategroup",
            index=models.Index(
                fields=["session", "canonical_url"],
                name="duplicate_g_session_ff3512_idx",
            ),
        ),
    ]
