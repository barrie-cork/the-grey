# Generated by Django 4.2.11 on 2025-07-25 01:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("review_manager", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SearchQuery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "population",
                    models.TextField(
                        help_text="Target population for the search (e.g., 'elderly adults', 'software developers')"
                    ),
                ),
                (
                    "interest",
                    models.TextField(
                        help_text="The intervention, exposure, or phenomenon of interest"
                    ),
                ),
                (
                    "context",
                    models.TextField(
                        help_text="The context or setting (e.g., 'healthcare', 'education', 'workplace')"
                    ),
                ),
                (
                    "query_string",
                    models.TextField(help_text="The final constructed search query"),
                ),
                (
                    "search_engines",
                    models.JSONField(
                        default=list,
                        help_text="List of search engines to use (e.g., ['google', 'bing'])",
                    ),
                ),
                (
                    "include_keywords",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Additional keywords to include",
                    ),
                ),
                (
                    "exclude_keywords",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Keywords to exclude from results",
                    ),
                ),
                (
                    "date_from",
                    models.DateField(
                        blank=True, help_text="Start date for results filter", null=True
                    ),
                ),
                (
                    "date_to",
                    models.DateField(
                        blank=True, help_text="End date for results filter", null=True
                    ),
                ),
                (
                    "languages",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of language codes to filter by (e.g., ['en', 'es'])",
                    ),
                ),
                (
                    "document_types",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Types of documents to include (e.g., ['pdf', 'report', 'thesis'])",
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this is a primary query (vs. supplementary)",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0, help_text="Order of execution for multiple queries"
                    ),
                ),
                (
                    "max_results",
                    models.IntegerField(
                        default=100, help_text="Maximum number of results to retrieve"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this query should be executed"
                    ),
                ),
                (
                    "last_executed",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this query was last executed",
                        null=True,
                    ),
                ),
                (
                    "execution_count",
                    models.IntegerField(
                        default=0,
                        help_text="Number of times this query has been executed",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "session",
                    models.ForeignKey(
                        help_text="The search session this query belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="search_queries",
                        to="review_manager.searchsession",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Search queries",
                "db_table": "search_queries",
                "ordering": ["session", "order", "created_at"],
                "indexes": [
                    models.Index(
                        fields=["session", "is_active"],
                        name="search_quer_session_7d5604_idx",
                    ),
                    models.Index(
                        fields=["is_primary"], name="search_quer_is_prim_14e3a6_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="QueryTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the template", max_length=255),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of when to use this template"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Category for organizing templates",
                        max_length=100,
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this template is available to all users",
                    ),
                ),
                (
                    "population_template",
                    models.TextField(
                        blank=True,
                        help_text="Population template with placeholders (e.g., '{age_group} with {condition}')",
                    ),
                ),
                (
                    "interest_template",
                    models.TextField(
                        blank=True, help_text="Interest/Intervention template"
                    ),
                ),
                (
                    "context_template",
                    models.TextField(blank=True, help_text="Context template"),
                ),
                (
                    "default_keywords",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Default keywords to include",
                    ),
                ),
                (
                    "default_exclusions",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Default keywords to exclude",
                    ),
                ),
                (
                    "default_engines",
                    models.JSONField(
                        blank=True, default=list, help_text="Default search engines"
                    ),
                ),
                (
                    "usage_count",
                    models.IntegerField(
                        default=0,
                        help_text="Number of times this template has been used",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this template",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="query_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "query_templates",
                "ordering": ["-usage_count", "name"],
                "indexes": [
                    models.Index(
                        fields=["is_public", "category"],
                        name="query_templ_is_publ_f9d435_idx",
                    ),
                    models.Index(
                        fields=["created_by"], name="query_templ_created_21dcce_idx"
                    ),
                ],
            },
        ),
    ]
