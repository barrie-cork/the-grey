version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-thesis_grey_db}
      - POSTGRES_USER=${POSTGRES_USER:-thesis_grey_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
    ports:
      - "5432:5432"
    networks:
      - thesis_grey_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-thesis_grey_user} -d ${POSTGRES_DB:-thesis_grey_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - thesis_grey_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: .docker/django/Dockerfile
    command: /start.sh
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - thesis_grey_network
    restart: unless-stopped

  celery_worker:
    build:
      context: .
      dockerfile: .docker/django/Dockerfile
    command: celery -A grey_lit_project worker -l info --concurrency=2
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web
    networks:
      - thesis_grey_network
    restart: unless-stopped

  celery_beat:
    build:
      context: .
      dockerfile: .docker/django/Dockerfile
    command: celery -A grey_lit_project beat -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web
    networks:
      - thesis_grey_network
    restart: unless-stopped

  flower:
    build:
      context: .
      dockerfile: .docker/django/Dockerfile
    command: celery -A grey_lit_project flower --port=5555
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      - celery_worker
      - redis
    networks:
      - thesis_grey_network
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - thesis_grey_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  thesis_grey_network:
    driver: bridge